// Mocks generated by Mockito 5.2.0 from annotations
// in my_doc_app_for_patients/test/features/auth/presentation/logic/reset_password_cubit/reset_password_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_doc_app_for_patients/core/errors/app_failures.dart' as _i5;
import 'package:my_doc_app_for_patients/features/auth/domain/usecases/reset_password_usecase.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ResetPasswordUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordUsecase extends _i1.Mock
    implements _i3.ResetPasswordUsecase {
  MockResetPasswordUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AuthFailures, _i2.Unit>> call(String? email) =>
      (super.noSuchMethod(Invocation.method(#call, [email]),
              returnValue: Future<_i2.Either<_i5.AuthFailures, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AuthFailures, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AuthFailures, _i2.Unit>>);
}
